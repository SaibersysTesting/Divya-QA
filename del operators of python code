

# Delete operation.
try:
    fred = [ 4, 5, 11, 43 ]
    print 'fred =', fred
    del fred[2]
    print 'fred =', fred
    del fred
    print 'fred =', fred
    print "Doesn't get here!"
except NameError, x:
    print "*** Name", x, "undefined ***"

fred = 'Nimrod'
print 'fred =', fred

a = 5, 9, 'frank', 33
b = ('this', 'that', 'the other')
print "A:", a, b
c = a + b
print "B:", c
print "C:", a[2], c[3:]
w, x, y = b
print "D:", w, x, y
try:
    print "E", len(c)
    (p, q, s, f) = c
    print "F:", p, q, s, f
except ValueError, descr:
    print "*** That won't work:", descr, "***"
(p, q, s, f) = c[:4]
print "G:", p, q, s, f
mrbig = (5, 17, 4, ('mac', 'alex', 'sally'), 888, b)
print "H:", mrbig

mt = ()
singleton = (5,)
print "I:", mt, singleton

try:
    fred = 5, 9, 22
    fred[1] = 3
    print "Won't see this."
except TypeError, descr:
    print "*** That won't work:", descr, "***"
fred = (5, 9, [3, 4, 7])
print "J:", fred
fred[2][1] = 'cow'
print "K:", fred


# Dictionaries map keys to values.

fred = { 'mike': 456, 'bill': 399, 'sarah': 521 }
try:
    print fred
    print fred['bill']
    print fred['nora']
    print "Won't see this!"
except KeyError, rest:
    print "Lookup failed:", rest
print
fred['bill'] = 'Sopwith Camel'
fred['wilma'] = 2233
del fred['mike']
print fred
print
print fred.keys()
for k in fred.keys():
    print k, "=>", fred[k]
print
for t in [ 'zingo', 'sarah', 'bill', 'wilma' ]:
    print t,
    if fred.has_key(t):
        print '=>', fred[t]
    else:
        print 'is not present.'



